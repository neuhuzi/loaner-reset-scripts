<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>527</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>cat#!/bin/bash

echo "==================================================="
echo "        LOANER MACHINE SOFT RESET UTILITY"
echo "==================================================="
echo
echo "This script will:"
echo " 1. Clear Downloads, Documents, and Desktop folders"
echo " 2. Clear browser data (Chrome, Safari, Firefox)"
echo " 3. Sign out of Microsoft 365 applications"
echo " 4. Remove saved credentials"
echo
echo "Press Ctrl+C to cancel or Enter to continue..."
read -r

# Create log file
LOGFILE="/tmp/reset_log_$(date +%Y%m%d_%H%M%S).txt"
echo "Starting reset process at $(date)" &gt; "$LOGFILE"

echo
echo "[*] Clearing user folders..."

# Clear common user folders
FOLDERS=("Downloads" "Desktop" "Documents" "Library/Caches")
for folder in "${FOLDERS[@]}"; do
    echo "  - Clearing $folder folder..."
    if [ -d "$HOME/$folder" ]; then
        rm -rf "$HOME/$folder/"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
        echo "    Done."
    else
        echo "    Folder not found, skipping."
    fi
done

echo
echo "[*] Clearing browser data..."

# Clear Chrome data
echo "  - Clearing Google Chrome data..."
killall "Google Chrome" 2&gt;/dev/null
if [ -d "$HOME/Library/Application Support/Google/Chrome" ]; then
    rm -rf "$HOME/Library/Application Support/Google/Chrome/Default/Cache"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Google/Chrome/Default/Cookies"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Google/Chrome/Default/History"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Google/Chrome/Default/Login Data"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    echo "    Done."
else
    echo "    Chrome not installed, skipping."
fi

# Clear Safari data
echo "  - Clearing Safari data..."
killall "Safari" 2&gt;/dev/null
if [ -d "$HOME/Library/Safari" ]; then
    rm -rf "$HOME/Library/Safari/History"* &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Safari/Downloads.plist" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Safari/LastSession.plist" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Safari/Databases" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Safari/LocalStorage" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Caches/com.apple.Safari" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Caches/com.apple.Safari.SafeBrowsing" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    defaults write com.apple.Safari HistoryAgeInDaysLimit 0 &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    defaults write com.apple.Safari DownloadsClearingPolicy 1 &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    echo "    Done."
else
    echo "    Safari not configured, skipping."
fi

# Clear Firefox data
echo "  - Clearing Firefox data..."
killall "firefox" 2&gt;/dev/null
if [ -d "$HOME/Library/Application Support/Firefox/Profiles" ]; then
    find "$HOME/Library/Application Support/Firefox/Profiles" -name "cache" -type d -exec rm -rf {} \; 2&gt;/dev/null
    find "$HOME/Library/Application Support/Firefox/Profiles" -name "cookies.sqlite" -type f -exec rm -f {} \; 2&gt;/dev/null
    find "$HOME/Library/Application Support/Firefox/Profiles" -name "places.sqlite" -type f -exec rm -f {} \; 2&gt;/dev/null
    echo "    Done."
else
    echo "    Firefox not installed, skipping."
fi

echo
echo "[*] Signing out of Microsoft 365 applications..."

# Kill Microsoft applications first
killall "Microsoft Outlook" 2&gt;/dev/null
killall "Microsoft Word" 2&gt;/dev/null
killall "Microsoft Excel" 2&gt;/dev/null
killall "Microsoft PowerPoint" 2&gt;/dev/null
killall "Microsoft OneNote" 2&gt;/dev/null
killall "Microsoft Teams" 2&gt;/dev/null

# Clear Office credentials
echo "  - Removing Office credentials..."
if [ -d "$HOME/Library/Group Containers/UBF8T346G9.Office" ]; then
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.Office/MicrosoftRegistrationDB.reg" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Group Containers/UBF8T346G9.Office/Licensing" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    echo "    Done."
else
    echo "    Office not installed, skipping."
fi

echo
echo "[*] Removing saved credentials..."

# Clear keychain entries for common services
echo "  - Clearing keychain items for common services..."
security delete-generic-password -l "Microsoft Office" all 2&gt;/dev/null
security delete-generic-password -l "Microsoft_Office_Identities_Cache" all 2&gt;/dev/null
security delete-generic-password -l "Microsoft_Office_Tickets_Cache" all 2&gt;/dev/null
security delete-generic-password -l "Chrome" all 2&gt;/dev/null
security delete-generic-password -l "Chrome Safe Storage" all 2&gt;/dev/null
echo "    Done."

echo
echo "[*] Removing OneDrive cached data..."
killall "OneDrive" 2&gt;/dev/null
if [ -d "$HOME/Library/Application Support/OneDrive" ]; then
    rm -rf "$HOME/Library/Application Support/OneDrive/settings" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    echo "    Done."
else
    echo "    OneDrive not configured, skipping."
fi

echo
echo "[*] Removing Teams cached data..."
if [ -d "$HOME/Library/Application Support/Microsoft/Teams" ]; then
    rm -rf "$HOME/Library/Application Support/Microsoft/Teams/Cache" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Microsoft/Teams/blob_storage" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Microsoft/Teams/databases" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Microsoft/Teams/Local Storage" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    rm -rf "$HOME/Library/Application Support/Microsoft/Teams/tmp" &gt;&gt; "$LOGFILE" 2&gt;&amp;1
    echo "    Done."
else
    echo "    Teams not installed, skipping."
fi

echo
echo "==================================================="
echo "        SOFT RESET COMPLETED SUCCESSFULLY"
echo "==================================================="
echo
echo "Log file created at: $LOGFILE"
echo
echo "The machine is now ready for the next user."
echo "Please restart the computer before handing it over."
echo
echo "Press Enter to exit..."
read -r
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>6DCFDDDC-70E4-4BA9-B95C-CDF38595CE24</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>7AF0198C-7E89-4FD9-B860-EA2B5E31B372</string>
				<key>UUID</key>
				<string>A9DEF6E9-0AA1-4E52-800A-E7C58CD7230B</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>309.000000:432.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
